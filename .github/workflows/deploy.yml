name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: ATiltedTree/setup-rust@v1.0.5
        with:
          rust-version: stable

      - name: Build Rust project
        run: cargo build --release

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t basic_rust_api_image .

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}

      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Configure SSH
        run: |
          # Print the current user
          echo "Current user: $(whoami)"
          
          # Check if the ~/.ssh directory exists
          if [ ! -d ~/.ssh ]; then
          echo "Creating ~/.ssh directory..."
          mkdir -p ~/.ssh
          fi
            
          # Check if the directory was created successfully
          if [ -d ~/.ssh ]; then
          echo "Successfully created ~/.ssh directory or it already exists."
          else
          echo "Failed to create ~/.ssh directory."
          exit 1
          fi
          
          # Print permissions of the ~/.ssh directory
          echo "Permissions of ~/.ssh directory:"
          ls -ld ~/.ssh
          
          # Continue with other commands...
          echo "Adding private key to ~/.ssh/id_rsa"
          echo "YOUR_PRIVATE_KEY_CONTENT" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          echo "Adding host key to ~/.ssh/known_hosts"
          ssh-keyscan -H YOUR_HOSTNAME_OR_IP >> ~/.ssh/known_hosts

      - name: SSH into EC2 Instance and Deploy
        run: |
          ssh -v -o StrictHostKeyChecking=no \
          "${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_EC2_HOST }}" \
          'bash -s' < deploy.sh